name: Deploy Dev environment
on:
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
        matrix:
          node-version: [18.x]
          # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps TCP port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:123@localhost:5432/getapro-backend-nestjs
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
      
      
      - run: yarn install --frozen-lockfile
      # run the migration in the test database
      - run: yarn db:push
      - run: yarn run test
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop' # Only deploy master
    needs: test
    steps:
       - uses: actions/checkout@v3
       - name: Use Node.js ${{ matrix.node-version }}
         uses: actions/setup-node@v3
         with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
      
      
       - run: yarn install --frozen-lockfile

       - name: Run production migration
         run: yarn migrate:deploy
         env:
            NODE_ENV: development
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
         
       - uses: akhileshns/heroku-deploy@v3.4.6
         with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
